{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"The Internals of Unity Catalog 0.1.0","text":"<p>Welcome to The Internals of Unity Catalog online book! \ud83e\udd19</p> <p>I'm Jacek Laskowski, a Freelance Data(bricks) Engineer specializing in Apache Spark (incl. Spark SQL and Spark Structured Streaming), Delta Lake, Databricks, and Apache Kafka (incl. Kafka Streams) with brief forays into a wider data engineering space (e.g., Trino, Dask and dbt, mostly during Warsaw Data Engineering meetups).</p> <p>I'm very excited to have you here and hope you will enjoy exploring the internals of Unity Catalog as much as I have.</p> <p>Flannery O'Connor</p> <p>I write to discover what I know.</p> <p>\"The Internals Of\" series</p> <p>I'm also writing other online books in the \"The Internals Of\" series. Please visit \"The Internals Of\" Online Books home page.</p> <p>Expect text and code snippets from a variety of public sources. Attribution follows.</p> <p>Now, let's take a deep dive into Unity Catalog \ud83d\udd25</p> <p>Last update: 2024-07-06</p>"},{"location":"overview/","title":"Unity Catalog","text":"<p>Unity Catalog is made up of the following runtimes:</p> <ul> <li>Reference Server</li> <li>Example CLI (based on the Client API)</li> </ul> <p>The server and CLI can be started on command line using <code>bin/start-uc-server</code> and <code>bin/uc</code> shell scripts, respectively.</p>"},{"location":"overview/#running-unity-catalog","title":"Running Unity Catalog","text":"<pre><code>$ java --version\nopenjdk 17.0.10 2024-01-16 LTS\nOpenJDK Runtime Environment Zulu17.48+15-CA (build 17.0.10+7-LTS)\nOpenJDK 64-Bit Server VM Zulu17.48+15-CA (build 17.0.10+7-LTS, mixed mode, sharing)\n</code></pre> <pre><code>$ ./bin/start-uc-server\n###################################################################\n#  _    _       _ _            _____      _        _              #\n# | |  | |     (_) |          / ____|    | |      | |             #\n# | |  | |_ __  _| |_ _   _  | |     __ _| |_ __ _| | ___   __ _  #\n# | |  | | '_ \\| | __| | | | | |    / _` | __/ _` | |/ _ \\ / _` | #\n# | |__| | | | | | |_| |_| | | |___| (_| | || (_| | | (_) | (_| | #\n#  \\____/|_| |_|_|\\__|\\__, |  \\_____\\__,_|\\__\\__,_|_|\\___/ \\__, | #\n#                      __/ |                                __/ | #\n#                     |___/               v0.1.0-SNAPSHOT  |___/  #\n###################################################################\n</code></pre> <pre><code>$ ./bin/uc\nPlease provide a entity.\n\nUsage: bin/uc &lt;entity&gt; &lt;operation&gt; [options]\nEntities: schema, volume, catalog, function, table\n\nBy default, the client will connect to UC running locally at http://localhost:8080\n\nTo connect to specific UC server, use --server https://&lt;host&gt;\n\nCurrently, auth using bearer token is supported. Please specify the token via --auth_token &lt;PAT Token&gt;\n\nFor detailed help on entity specific operations, use bin/uc &lt;entity&gt; --help\n</code></pre>"},{"location":"cli/","title":"Unity Catalog CLI","text":"<p>Unity Catalog CLI can be started using <code>./bin/uc</code> command-line utility that runs UnityCatalogCli.</p>"},{"location":"cli/CatalogCli/","title":"CatalogCli","text":""},{"location":"cli/FunctionCli/","title":"FunctionCli","text":""},{"location":"cli/SchemaCli/","title":"SchemaCli","text":""},{"location":"cli/TableCli/","title":"TableCli","text":""},{"location":"cli/UnityCatalogCli/","title":"UnityCatalogCli","text":"<p><code>UnityCatalogCli</code> can be launched on command line using <code>./bin/uc</code> command-line utility.</p>"},{"location":"cli/UnityCatalogCli/#options","title":"Options","text":""},{"location":"cli/UnityCatalogCli/#auth_token","title":"auth_token","text":"<p>Personal access token (PAT) to authorize requests</p> <p>When specified, <code>UnityCatalogCli</code> creates an ApiClient that adds <code>Authorization</code> header with <code>Bearer [pat]</code> to every request.</p>"},{"location":"cli/UnityCatalogCli/#server","title":"server","text":"<p>Default: <code>http://localhost:8080</code></p>"},{"location":"cli/UnityCatalogCli/#main","title":"Launching Standalone Application","text":"<p><code>main</code> creates an ApiClient and handles the command (specified as the first argument on command line).</p> Command Handler <code>catalog</code> CatalogCli <code>function</code> FunctionCli <code>schema</code> SchemaCli <code>table</code> TableCli <code>volume</code> VolumeCli"},{"location":"cli/UnityCatalogCli/#getApiClient","title":"Creating ApiClient","text":"<pre><code>ApiClient getApiClient(\n  CommandLine cmd)\n</code></pre> <p><code>getApiClient</code> creates an ApiClient with the following:</p> Attribute Value The host name of the UC service server option The port number of the UC service The port from the server option, if specified, or one of the following: <ul><li><code>443</code> for <code>https</code> scheme<li><code>8080</code> for <code>http</code> scheme"},{"location":"cli/UnityCatalogCli/#logging","title":"Logging","text":"<p><code>UnityCatalogCli</code> uses <code>etc/conf/cli.log4j2.properties</code> as the logging configuration file (via log4j.configurationFile configuration property).</p>"},{"location":"cli/VolumeCli/","title":"VolumeCli","text":""},{"location":"client/","title":"Unity Catalog Client API","text":""},{"location":"server/","title":"Unity Catalog Server","text":"<p>Unity Catalog Server can be started using <code>./bin/start-uc-server</code> command-line utility (that runs UnityCatalogServer).</p> <p>Unity Catalog Server listens at <code>8080</code> by default to handle HTTP requests.</p>"},{"location":"server/CatalogService/","title":"CatalogService","text":"<p><code>CatalogService</code> is a Unity Catalog API service that UnityCatalogServer uses to handle HTTP requests at <code>/api/2.1/unity-catalog/catalogs</code> URL.</p> Method URL Handler Params GET listCatalogs POST createCatalog JSON-ified CreateCatalog GET <code>/{name}</code> getCatalog <ul><li>name</li></ul> PATCH <code>/{name}</code> updateCatalog <ul><li>name</li></ul> DELETE <code>/{name}</code> deleteCatalog <ul><li>name</li></ul> <pre><code>$ http http://localhost:8081/api/2.1/unity-catalog/catalogs\nHTTP/1.1 200 OK\ncontent-length: 184\ncontent-type: application/json\ndate: Thu, 4 Jul 2024 17:56:19 GMT\nserver: Armeria/1.28.4\n\n{\n    \"catalogs\": [\n        {\n            \"comment\": \"Main catalog\",\n            \"created_at\": 1720090500565,\n            \"id\": \"17562adb-e6f8-463e-b82a-22264b067d6b\",\n            \"name\": \"unity\",\n            \"properties\": {},\n            \"updated_at\": null\n        }\n    ],\n    \"next_page_token\": null\n}\n</code></pre> <pre><code>$ http http://localhost:8081/api/2.1/unity-catalog/catalogs | jq '.catalogs[].name'\n\"unity\"\n</code></pre>"},{"location":"server/CreateCatalog/","title":"CreateCatalog","text":""},{"location":"server/CreateTable/","title":"CreateTable","text":""},{"location":"server/FunctionService/","title":"FunctionService","text":""},{"location":"server/IcebergRestCatalogService/","title":"IcebergRestCatalogService","text":""},{"location":"server/SchemaService/","title":"SchemaService","text":""},{"location":"server/TableService/","title":"TableService","text":"<p><code>TableService</code> is a Unity Catalog API service that UnityCatalogServer uses to handle HTTP requests at <code>/api/2.1/unity-catalog/</code> URL.</p> Method URL Handler Params GET <code>/tables</code> listTables <ul><li>catalog_name</li><li>schema_name</li><li>max_results</li><li>page_token</li><li>omit_properties</li><li>omit_columns POST <code>/tables</code> createTable JSON-ified CreateTable GET <code>/tables/{full_name}</code> getTable <ul><li>fullName</li></ul> DELETE <code>/tables/{full_name}</code> deleteTable <ul><li>fullName</li></ul> <pre><code>$ http http://localhost:8081/api/2.1/unity-catalog/tables catalog_name==unity schema_name==default | jq '.tables[].name'\n\"numbers\"\n\"marksheet_uniform\"\n\"marksheet\"\n</code></pre>"},{"location":"server/TemporaryTableCredentialsService/","title":"TemporaryTableCredentialsService","text":""},{"location":"server/TemporaryVolumeCredentialsService/","title":"TemporaryVolumeCredentialsService","text":""},{"location":"server/UnityCatalogServer/","title":"UnityCatalogServer Reference Server","text":"<p><code>UnityCatalogServer</code> can be used as a command-line utility to start a Unity Catalog Reference Server at the given port (default: <code>8080</code>) or the closest one open.</p> <pre><code>./bin/start-uc-server [port]\n</code></pre> <p><code>UnityCatalogServer</code> starts Armeria documentation service at http://localhost:8081/docs/ and the Unity Catalog API services.</p>"},{"location":"server/UnityCatalogServer/#creating-instance","title":"Creating Instance","text":"<p><code>UnityCatalogServer</code> takes the following to be created:</p> <ul> <li> Port (default: <code>8080</code>) <p>While being created, <code>UnityCatalogServer</code> builds the Server:</p> <ol> <li>Handle HTTP requests at the given port</li> <li>Bind the Armeria documentation service (Armeria) under <code>/docs</code> URL</li> <li>Register the API services</li> </ol> <p><code>UnityCatalogServer</code> is created when:</p> <ul> <li><code>UnityCatalogServer</code> command-line utility is started</li> </ul>"},{"location":"server/UnityCatalogServer/#server","title":"Server","text":"<p><code>UnityCatalogServer</code> creates a <code>Server</code> (Armeria) when created.</p>"},{"location":"server/UnityCatalogServer/#addServices","title":"Registering API Services","text":"<pre><code>void addServices(\n  ServerBuilder sb)\n</code></pre> <p><code>addServices</code> creates and registers Unity Catalog API services at the <code>/api/2.1/unity-catalog/</code> base path.</p> URL Service <code>/</code> Returns <code>Hello, Unity Catalog!</code> message <code>/api/2.1/unity-catalog/</code> TableService <code>/api/2.1/unity-catalog/catalogs</code> CatalogService <code>/api/2.1/unity-catalog/functions</code> FunctionService <code>/api/2.1/unity-catalog/iceberg</code> IcebergRestCatalogService <code>/api/2.1/unity-catalog/schemas</code> SchemaService <code>/api/2.1/unity-catalog/temporary-table-credentials</code> TemporaryTableCredentialsService <code>/api/2.1/unity-catalog/temporary-volume-credentials</code> TemporaryVolumeCredentialsService <code>/api/2.1/unity-catalog/volumes</code> VolumeService"},{"location":"server/UnityCatalogServer/#main","title":"Launching UnityCatalogServer","text":"<pre><code>void main(\n  String[] args)\n</code></pre> <p><code>main</code> starts probing for the available port from <code>8081</code> or the first argument specified on command line.</p> <p><code>main</code> creates a UnityCatalogServer.</p> <p><code>main</code> requests the <code>UnityCatalogServer</code> to print out the welcome ASCII art message.</p> <p><code>main</code> requests the <code>UnityCatalogServer</code> to start.</p> <p><code>main</code>...FIXME</p>"},{"location":"server/VolumeService/","title":"VolumeService","text":""}]}